// === Backend (API de productos y categorías) ===
const express = require("express");
const app = express();
const mysql = require("mysql2");
const cors = require("cors");

app.use(cors());
app.use(express.json());

const db = mysql.createConnection({
    host: "localhost",
    user: "root",
    password: "mysql",
    database: "pequeta"
});

db.connect((err) => {
    if (err) {
        console.error("Error al conectar a la base de datos: ", err);
    } else {
        console.log("Conexión exitosa a la base de datos");
    }
});

module.exports = db;

// GUARDAR/CREAR PRODUCTO (incluyendo categoría)
app.post("/create", (req, res) => {
    const { nombre, descripcion, precio, categoria_id } = req.body;

    db.query('INSERT INTO productos (nombre, descripcion, precio, categoria_id) VALUES (?, ?, ?, ?)',
        [nombre, descripcion, precio, categoria_id],
        (err, result) => {
            if (err) {
                console.log(err);
                res.status(500).send("Error al crear el producto");
            } else {
                res.send(result);
            }
        }
    );
});

// MOSTRAR LISTA DE PRODUCTOS (con la categoría asociada)
app.get("/mostrar", (req, res) => {
    db.query('SELECT productos.*, categorias.nombre AS categoria_nombre FROM productos LEFT JOIN categorias ON productos.categoria_id = categorias.id',
        (err, result) => {
            if (err) {
                console.log(err);
                res.status(500).send("Error al obtener los productos");
            } else {
                res.send(result);
            }
        }
    );
});

// MOSTRAR LISTA DE CATEGORÍAS
app.get("/categorias", (req, res) => {
    db.query('SELECT * FROM categorias', (err, result) => {
        if (err) {
            console.log(err);
            res.status(500).send("Error al obtener las categorías");
        } else {
            res.send(result);
        }
    });
});

// ACTUALIZAR/EDITAR PRODUCTO (incluyendo categoría)
app.put("/editar", (req, res) => {
    const { id, nombre, descripcion, precio, categoria_id } = req.body;

    db.query('UPDATE productos SET nombre = ?, descripcion = ?, precio = ?, categoria_id = ? WHERE id = ?',
        [nombre, descripcion, precio, categoria_id, id],
        (err, result) => {
            if (err) {
                console.log(err);
                res.status(500).send("Error al actualizar el producto");
            } else {
                res.send(result);
            }
        }
    );
});

// ELIMINAR PRODUCTO
app.delete("/eliminar/:id", (req, res) => {
    const id = req.params.id;

    db.query('DELETE FROM productos WHERE id = ?', [id],
        (err, result) => {
            if (err) {
                console.log(err);
                res.status(500).send("Error al eliminar el producto");
            } else {
                res.send(result);
            }
        }
    );
});

app.listen(3001, () => {
    console.log("Corriendo en el puerto 3001", "http://localhost:" + 3001);
});