// import { useState, useEffect } from 'react'
// import Axios from 'axios';
// import './App.css'
// import 'bootstrap/dist/css/bootstrap.min.css';
// import Swal from 'sweetalert2'



// function App() {
//   const [nombre, setNombre] = useState("");
//   const [descripcion, setDescripcion] = useState("");
//   const [precio, setPrecio] = useState();
//   const [productoList, setProductos] = useState([]);
//   const [editar, setEditar] = useState(false);
//   const [id, setId] = useState();


//   //Guardar/Crear
//   const add = () => {
//     Axios.post("http://localhost:3001/create", {
//       nombre: nombre,
//       descripcion: descripcion,
//       precio: precio
//     }).then(() => {
//       getProductos();
//       limpiarCampos();
//       Swal.fire({
//         title: "producto registrado",
//         icon: "success",
//         timer: 2000
//       })
//     }).catch(function (error) { //si el servidor no esta disponible aparece error
//       Swal.fire({
//         icon: "error",
//         title: "Oops...",
//         text: JSON.parse(JSON.stringify(error)).message === "Network Error" ? "Intente más tarde" : JSON.parse(JSON.stringify(error)).message,
//       });
//     });
//   }

//   //Mostrar lista
//   const getProductos = () => {
//     Axios.get("http://localhost:3001/mostrar").then((response) => {
//       setProductos(response.data);
//     });
//   }
//   useEffect(() => {
//     getProductos();
//   }, []);

//   //Actualizar 
//   const editarProductos = (val) => {
//     setEditar(true);
//     setNombre(val.nombre);
//     setDescripcion(val.descripcion);
//     setPrecio(val.precio);
//     setId(val.id);
//   }

//   const putProductos = () => {
//     Axios.put("http://localhost:3001/editar", {
//       id: id,
//       nombre: nombre,
//       descripcion: descripcion,
//       precio: precio
//     }).then(() => {
//       getProductos();
//       limpiarCampos();
//       Swal.fire({
//         title: "producto modificado",
//         icon: "success",
//         timer: 2000
//       })
//     }).catch(function (error) { //si el servidor no esta disponible aparece error
//       Swal.fire({
//         icon: "error",
//         title: "Oops...",
//         text: JSON.parse(JSON.stringify(error)).message === "Network Error" ? "Intente más tarde" : JSON.parse(JSON.stringify(error)).message,
//       });
//     });
//   }


//   //Eliminar 
// const deleteProductos = (val) => {
//   Swal.fire({
//     title: "Eliminar",
//     html: `¿Desea eliminar <strong>${val.nombre}</strong>?`,
//     icon: "warning",
//     showCancelButton: true,
//     confirmButtonColor: '#3085d6',
//     cancelButtonColor: '#d33',
//     confirmButtonText: 'Sí, eliminar',
//     cancelButtonText: 'No, cancelar',
//   }).then((result) => {
//     if (result.isConfirmed) {
//       Axios.delete(`http://localhost:3001/eliminar/${val.id}`)
//         .then(() => {
//           // Aquí se actualiza la lista de productos inmediatamente después de eliminar el producto
//           getProductos(); 
//           limpiarCampos();
//           Swal.fire({
//             title: 'Eliminado!',
//             text: `${val.nombre} fue eliminado`,
//             icon: 'success',
//             timer: 2000,
//             showConfirmButton: false
//           });
//         })
//         .catch((error) => {
//           // Mostrar error si la eliminación falla
//           Swal.fire({
//             icon: "error",
//             title: "Oops...",
//             text: "No se logró eliminar el producto",
//           });
//         });
//     }
//   });
// };





//   //Limpia para seguir editando
//   const limpiarCampos = () => {
//     setNombre('');
//     setDescripcion('');
//     setPrecio('');
//     setEditar(false);
//   }

//   return (
//     <>
//       <div className="container">
//         <div className="card text-center">
//           <div className="card-header">
//             Agregar Productos
//           </div>
//           <div className="card-body">
//             <div className="input-group mb-3">


//               <div className="input-group m-3">
//                 <span className="input-group-text" id="basic-addon1">Nombe del Producto:</span>
//                 <input className="form-control"
//                   type="text"
//                   onChange={(event) => { setNombre(event.target.value) }}
//                   placeholder='Ingrese el nombre del producto' value={nombre} aria-label='Username' aria-describedby='basic-addon1'
//                 />
//               </div>

//               <div className="input-group m-3">
//                 <span className="input-group-text" id="basic-addon1">Precio:</span>
//                 <input className="form-control"
//                   type="number"
//                   onChange={(event) => { setPrecio(event.target.value) }}
//                   placeholder='Ingrese el precio' value={precio} aria-label='Username' aria-describedby='basic-addon1'
//                 />
//               </div>
              
//               <div className="input-group m-3">
//                 <span className="input-group-text" id="basic-addon1">Descripcion:</span>
//                 <input className="form-control"
//                   type="text"
//                   onChange={(event) => { setDescripcion(event.target.value) }}
//                   placeholder='Ingrese una descripcion' value={descripcion} aria-label='Username' aria-describedby='basic-addon1'
//                 />
//               </div>

//             </div>
//           </div>
//           <div className="card-footer text-body-secondary">
//             {
//               editar ?
//                 <div>
//                   <button className='btn btn-warning m-2' onClick={putProductos}>ACTUALIZAR </button>
//                   <button className='btn btn-info m-2' onClick={limpiarCampos}>CANCELAR </button>
//                 </div>

//                 : <button className='btn btn-success' onClick={add}>Agregar</button>
//             }
//           </div>
//         </div>

//         <table className='table table-striped'>
//           <thead>
//             <tr>
//               <th scope="col">#</th>
//               <th scope="col">nombre</th>
//               <th scope="col">descripcion</th>
//               <th scope="col">precio</th>
//               <th scope="col">acciones</th>
//             </tr>
//           </thead>

//           <tbody>
//             {
//               productoList.map((val, key) => {
//                 return <tr key={val.id}>
//                   <th>{val.id}</th>
//                   <td>{val.nombre}</td>
//                   <td>{val.descripcion}</td>
//                   <td>{val.precio}</td>
//                   <td>
//                     <div className="btn-group" role="group" aria-label="Basic mixed styles example">
//                       <button type="button" onClick={() => { editarProductos(val); }} className="btn btn-warning">Editar</button>
//                       <button type="button" onClick={() => { deleteProductos(val); }} className="btn btn-danger">Eliminar</button>
//                     </div>
//                   </td>
//                 </tr>
//               })

//             }
//           </tbody>
//         </table>

//       </div>
//     </>

//   )
// };

// export default App

