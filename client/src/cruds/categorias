// Importamos las librerías necesarias
import { useState, useEffect } from 'react';
import Axios from 'axios';
import 'bootstrap/dist/css/bootstrap.min.css';
import Swal from 'sweetalert2';

function CategoriasApp() {
  const [nombreCategoria, setNombreCategoria] = useState("");
  const [categorias, setCategorias] = useState([]);
  const [editar, setEditar] = useState(false);
  const [idCategoria, setIdCategoria] = useState();
  const [desplegar, setDesplegar] = useState(false);

  // Obtener todas las categorías
  const getCategorias = () => {
    Axios.get("http://localhost:3001/categorias").then((response) => {
      setCategorias(response.data);
    });
  };

  useEffect(() => {
    getCategorias();
  }, []);

  // Agregar nueva categoría
  const addCategoria = () => {
    Axios.post("http://localhost:3001/categorias", {
      nombre: nombreCategoria,
    })
      .then(() => {
        getCategorias();
        setNombreCategoria("");
        Swal.fire({
          title: "Categoría agregada",
          icon: "success",
          timer: 2000,
        });
      })
      .catch((error) => {
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: error.message,
        });
      });
  };

  // Editar categoría
  const editarCategoria = (categoria) => {
    setEditar(true);
    setNombreCategoria(categoria.nombre);
    setIdCategoria(categoria.id);
  };

  const putCategoria = () => {
    Axios.put(`http://localhost:3001/categorias/${idCategoria}`, {
      nombre: nombreCategoria,
    })
      .then(() => {
        getCategorias();
        setNombreCategoria("");
        setEditar(false);
        Swal.fire({
          title: "Categoría modificada",
          icon: "success",
          timer: 2000,
        });
      })
      .catch((error) => {
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: error.message,
        });
      });
  };

  // Eliminar categoría
  const deleteCategoria = (id) => {
    Swal.fire({
      title: "Eliminar",
      text: `¿Desea eliminar esta categoría?`,
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Sí, eliminar",
    }).then((result) => {
      if (result.isConfirmed) {
        Axios.delete(`http://localhost:3001/categorias/${id}`).then(() => {
          getCategorias();
          Swal.fire({
            title: "Eliminada!",
            text: "Categoría eliminada con éxito",
            icon: "success",
            timer: 2000,
            showConfirmButton: false,
          });
        });
      }
    });
  };

  return (
    <div className="container">
      <div className="card text-center">
        <div className="card-header">Agregar Categoría</div>
        <div className="card-body">
          <div className="input-group mb-3">
            <input
              className="form-control"
              type="text"
              onChange={(event) => setNombreCategoria(event.target.value)}
              placeholder="Escribe una categoría..."
              value={nombreCategoria}
            />
            <button
              className="btn btn-success ms-2"
              onClick={editar ? putCategoria : addCategoria}
            >
              {editar ? "Actualizar" : "Agregar"}
            </button>
          </div>
        </div>
        <div className="card-footer text-body-secondary">
          <button
            className="btn btn-primary"
            onClick={() => setDesplegar(!desplegar)}
          >
            {desplegar ? "Ocultar Categorías" : "Ver Categorías"}
          </button>
        </div>
      </div>

      {desplegar && (
        <table className="table table-striped mt-3">
          <thead>
            <tr>
              <th scope="col">#</th>
              <th scope="col">Nombre</th>
              <th scope="col">Acciones</th>
            </tr>
          </thead>
          <tbody>
            {categorias.map((categoria, index) => (
              <tr key={categoria.id}>
                <th scope="row">{index + 1}</th>
                <td>{categoria.nombre}</td>
                <td>
                  <div className="btn-group" role="group">
                    <button
                      type="button"
                      onClick={() => editarCategoria(categoria)}
                      className="btn btn-warning"
                    >
                      Editar
                    </button>
                    <button
                      type="button"
                      onClick={() => deleteCategoria(categoria.id)}
                      className="btn btn-danger"
                    >
                      Eliminar
                    </button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
}

export default CategoriasApp;
